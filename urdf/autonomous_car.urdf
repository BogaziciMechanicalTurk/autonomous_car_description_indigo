<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro" name="autonomous_car">

<xacro:include filename="$(find autonomous_car_description)/urdf/autonomous_car_functions.xacro" />
<xacro:include filename="$(find autonomous_car_description)/urdf/autonomous_car_physical.xacro" />
<xacro:include filename="$(find autonomous_car_description)/urdf/autonomous_car_joints.xacro" />

<gazebo reference="front_left_wheel">
    <mu1>0.9</mu1>
    <mu2>0.9</mu2>
    <minDepth>0.005</minDepth>
    <kp>1e8</kp>
</gazebo>
<gazebo reference="front_right_wheel">
    <mu1>0.9</mu1>
    <mu2>0.9</mu2>
    <minDepth>0.005</minDepth>
    <kp>1e8</kp>
</gazebo>
<gazebo reference="rear_left_wheel">
    <mu1>0.9</mu1>
    <mu2>0.9</mu2>
    <minDepth>0.005</minDepth>
    <kp>1e8</kp>
</gazebo>
<gazebo reference="rear_right_wheel">
    <mu1>0.9</mu1>
    <mu2>0.9</mu2>
    <minDepth>0.005</minDepth>
    <kp>1e8</kp>
</gazebo>

<link name="base_link">
    <inertial>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <xacro:box_inertial mass="1"  width="0.01" length="0.01" height="0.01"/>
    </inertial>
</link>

<link name="chassis">
    <visual>
        <material name="acrylic"/>
        <xacro:chassis_visual/>
    </visual>
    <collision>
        <xacro:chassis_geometry/>
    </collision>
    <inertial>
        <xacro:chassis_inertial/>
    </inertial>
</link>
<xacro:fixed_offset_joint parent="base_link" child="chassis" offset="0 0 ${front_wheel_diameter/2}" rotation="0 0 1.5707" axis="1 0 0"/>

<link name="front_left_hinge">
    <inertial>
        <xacro:hinge_inertial/>
    </inertial>
</link>
<xacro:hinge_joint parent="chassis" child="front_left_hinge" offset="${front_left_to_right_wheel_center/2} -${front_to_rear_wheel_center/2} 0" rotation="0 0 0" axis="0 0 1"/>

<link name="front_right_hinge">
    <inertial>
        <xacro:hinge_inertial/>
    </inertial>
</link>
<xacro:hinge_joint parent="chassis" child="front_right_hinge" offset="-${front_left_to_right_wheel_center/2} -${front_to_rear_wheel_center/2} 0" rotation="0 0 0" axis="0 0 1"/>>

<link name="front_left_wheel">
    <visual>
        <material name="black"/>
        <xacro:front_wheel_visual/>
    </visual>
    <collision>
        <xacro:front_wheel_geometry/>
    </collision>
    <inertial>
        <xacro:front_wheel_inertial/>
    </inertial>
</link>
<xacro:wheel_joint parent="front_left_hinge" child="front_left_wheel" offset="0 0 0" rotation="0 0 0" axis="1 0 0"/>

<link name="front_right_wheel">
    <visual>
        <material name="black"/>
        <xacro:front_wheel_visual/>
    </visual>
    <collision>
        <xacro:front_wheel_geometry/>
    </collision>
    <inertial>
        <xacro:front_wheel_inertial/>
    </inertial>
</link>
<xacro:wheel_joint parent="front_right_hinge" child="front_right_wheel" offset="0 0 0" rotation="0 0 0" axis="1 0 0"/>

<link name="rear_left_wheel">
    <visual>
        <material name="black"/>
        <xacro:rear_wheel_visual/>
    </visual>
    <collision>
        <xacro:rear_wheel_geometry/>
    </collision>
    <inertial>
        <xacro:rear_wheel_inertial/>
    </inertial>
</link>
<xacro:wheel_joint parent="chassis" child="rear_left_wheel" offset="${rear_left_to_right_wheel_center/2} ${front_to_rear_wheel_center/2} -${(front_wheel_diameter-rear_wheel_diameter)/2}" rotation="0 0 0" axis="1 0 0"/>

<link name="rear_right_wheel">
    <visual>
        <material name="black"/>
        <xacro:rear_wheel_visual/>
    </visual>
    <collision>
        <xacro:rear_wheel_geometry/>
    </collision>
    <inertial>
        <xacro:rear_wheel_inertial/>
    </inertial>
</link>
<xacro:wheel_joint parent="chassis" child="rear_right_wheel" offset="-${rear_left_to_right_wheel_center/2} ${front_to_rear_wheel_center/2} -${(front_wheel_diameter-rear_wheel_diameter)/2}" rotation="0 0 0" axis="1 0 0"/>

<link name="front_camera_link">
    <visual>
        <material name="blue"/>
        <xacro:camera_geometry/>
    </visual>
    <collision>
        <xacro:camera_geometry/>
    </collision>
    <inertial>
        <xacro:camera_inertial/>
    </inertial>
</link>
<xacro:fixed_offset_joint parent="chassis" child="front_camera_link" offset="0 -${front_to_rear_wheel_center/2 + 0.1} ${camera_mount_height}" rotation="0 0 -1.5707" axis="1 0 0"/>

<link name="hokuyo_link">
    <visual>
        <material name="red"/>
        <xacro:lidar_geometry/>
    </visual>
    <collision>
        <xacro:lidar_geometry/>
    </collision>
    <inertial>
        <xacro:lidar_inertial/>
    </inertial>
</link>
<xacro:fixed_offset_joint parent="chassis" child="hokuyo_link" offset="0 -${front_to_rear_wheel_center/2 + 0.1} ${lidar_mount_height}" rotation="0 0 -1.5707" axis="1 0 0"/>

<gazebo>
    <plugin name="autonomous_car_plugin" filename="libAutonomousCarPlugin.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>40</updateRate>
        <robotNamespace>autonomous_car</robotNamespace>
    </plugin>
</gazebo>

<gazebo reference="front_camera_link">
    <sensor type="camera" name="front_camera">
        <update_rate>30.0</update_rate>
        <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
        <width>800</width>
        <height>800</height>
        <format>R8G8B8</format>
        </image>
        <clip>
        <near>0.02</near>
        <far>300</far>
        </clip>
        <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
        </noise>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>0.0</updateRate>
            <cameraName>/autonomous_car/front_camera</cameraName>
            <imageTopicName>image_raw</imageTopicName>
            <cameraInfoTopicName>camera_info</cameraInfoTopicName>
            <frameName>front_camera_link</frameName>
            <hackBaseline>0.07</hackBaseline>
            <distortionK1>0.0</distortionK1>
            <distortionK2>0.0</distortionK2>
            <distortionK3>0.0</distortionK3>
            <distortionT1>0.0</distortionT1>
            <distortionT2>0.0</distortionT2>
        </plugin>
    </sensor>
</gazebo>

<gazebo reference="hokuyo_link">
    <sensor type="ray" name="head_hokuyo_sensor">
  <pose>0 0 0 0 0 0</pose>
  <visualize>false</visualize>
  <update_rate>60</update_rate>
  <ray>
    <scan>
      <horizontal>
        <samples>720</samples>
        <resolution>1</resolution>
        <min_angle>-1.570796</min_angle>
        <max_angle>1.570796</max_angle>
      </horizontal>
    </scan>
    <range>
      <min>0.1</min>
      <max>30.0</max>
      <resolution>0.01</resolution>
    </range>
    <noise>
      <type>gaussian</type>
      <mean>0.0</mean>
      <stddev>0.01</stddev>
    </noise>
  </ray>
  <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
    <topicName>/autonomous_car/laser/scan</topicName>
    <frameName>hokuyo_link</frameName>
  </plugin>
</sensor>
</gazebo>

</robot>
